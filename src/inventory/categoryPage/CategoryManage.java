/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package inventory.categoryPage;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;

/**
 *
 * @author Kind
 */
public class CategoryManage extends javax.swing.JPanel {

    /**
     * Creates new form CategoryManage
     */
    public CategoryManage() {
        initComponents();
        LoadData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    public void LoadData(){
        list = new ArrayList<String>();
        pane = new ArrayList<String>();
        id = new ArrayList<Integer>();
        
        this.descriptionTextPane.setText("");
        
        try {
            ResultSet rs = null;
            
            rs = inventory.core.DBConnection.excuteQuery("SELECT * FROM inventory.category order by name;");
            
            if(rs != null){
                while(rs.next()){
                    if(rs.getInt("disable_id") != 1){
                        continue;
                    }
                    list.add(rs.getString("name"));
                    pane.add(rs.getString("description"));
                    id.add(rs.getInt("id"));
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(CategoryManage.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        this.categoryNameList.setListData(list.toArray());
    }
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        categoryNameScrollPane = new javax.swing.JScrollPane();
        categoryNameList = new javax.swing.JList();
        descriptionScrollPane = new javax.swing.JScrollPane();
        descriptionTextPane = new javax.swing.JTextPane();
        backButton = new javax.swing.JButton();
        editButton = new javax.swing.JButton();
        dropButton = new javax.swing.JButton();
        registerButton = new javax.swing.JButton();

        categoryNameList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                categoryNameListMouseClicked(evt);
            }
        });
        categoryNameList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                categoryNameListValueChanged(evt);
            }
        });
        categoryNameScrollPane.setViewportView(categoryNameList);

        descriptionTextPane.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        descriptionTextPane.setEnabled(false);
        descriptionScrollPane.setViewportView(descriptionTextPane);

        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        editButton.setText("Edit");
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });

        dropButton.setText("Drop");
        dropButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dropButtonActionPerformed(evt);
            }
        });

        registerButton.setText("Register");
        registerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(categoryNameScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(descriptionScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(backButton, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE)
                    .addComponent(editButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dropButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(registerButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(registerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                        .addComponent(editButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                        .addComponent(dropButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                        .addComponent(backButton))
                    .addComponent(categoryNameScrollPane, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(descriptionScrollPane, javax.swing.GroupLayout.Alignment.LEADING))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void categoryNameListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_categoryNameListMouseClicked
        // TODO add your handling code here:
        //System.out.println(this.categoryNameList.getSelectedIndex());
        this.descriptionTextPane.setText(this.pane.get(this.categoryNameList.getSelectedIndex()));
        if(this.categoryNameList.getSelectedIndex() >= 0 && evt.getClickCount() == 2){
            inventory.categoryPage.CategoryEdit p = new inventory.categoryPage.CategoryEdit();
            p.setEditConfig(id.get(this.categoryNameList.getSelectedIndex()), list.get(this.categoryNameList.getSelectedIndex()), pane.get(this.categoryNameList.getSelectedIndex()));
            
            if(inventory.core.ProjectBOMStockMain.display != null){
                inventory.core.ProjectBOMStockMain.display.dispose();
            }
            inventory.core.ProjectBOMStockMain.display = new inventory.core.ShowingFrame(p, "CategoryEdit");
            inventory.core.ProjectBOMStockMain.display.setVisible(true);
        }
    }//GEN-LAST:event_categoryNameListMouseClicked

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        if(inventory.core.ProjectBOMStockMain.display != null){
            inventory.core.ProjectBOMStockMain.display.dispose();
        }
        inventory.core.ProjectBOMStockMain.setPage(inventory.core.ProjectBOMStockMain.PageList.indexOf("AdminMain"));
    }//GEN-LAST:event_backButtonActionPerformed

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
        // TODO add your handling code here:
        /*
        if(this.categoryNameList.getSelectedIndex()>=0 && this.categoryNameList.getSelectedIndex() < list.size()){
            inventory.core.ProjectBOMStockMain.setPage(inventory.core.ProjectBOMStockMain.PageList.indexOf("CategoryEdit"));
            ((inventory.categoryPage.CategoryEdit)inventory.core.ProjectBOMStockMain.getPage(inventory.core.ProjectBOMStockMain.PageList.indexOf("CategoryEdit"))).setEditConfig(id.get(this.categoryNameList.getSelectedIndex()), list.get(this.categoryNameList.getSelectedIndex()), pane.get(this.categoryNameList.getSelectedIndex()));
        }f1
        */
        if(this.categoryNameList.getSelectedIndex() >= 0){
            inventory.categoryPage.CategoryEdit p = new inventory.categoryPage.CategoryEdit();
            p.setEditConfig(id.get(this.categoryNameList.getSelectedIndex()), list.get(this.categoryNameList.getSelectedIndex()), pane.get(this.categoryNameList.getSelectedIndex()));
            
            if(inventory.core.ProjectBOMStockMain.display != null){
                inventory.core.ProjectBOMStockMain.display.dispose();
            }
            inventory.core.ProjectBOMStockMain.display = new inventory.core.ShowingFrame(p, "CategoryEdit");
            inventory.core.ProjectBOMStockMain.display.setVisible(true);
        }
    }//GEN-LAST:event_editButtonActionPerformed

    private void dropButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dropButtonActionPerformed
        // TODO add your handling code here:
        /*
        int dialogResult = JOptionPane.showConfirmDialog (this, "Would You Like to Delete? Are you Sure?!","Warning",JOptionPane.YES_NO_OPTION);
        
        if(dialogResult == JOptionPane.YES_OPTION){
            inventory.core.DBConnection.updateQuery("DELETE FROM `inventory`.`category` WHERE `id`='"+id.get(this.categoryNameList.getSelectedIndex())+"';");
            this.LoadData();
        }
        */
        dropAndDisable(this.id, this.categoryNameList, 2, this);
    }//GEN-LAST:event_dropButtonActionPerformed

    public void dropAndDisable(ArrayList<Integer> ids, javax.swing.JList list, int table_type, Object obj){
        if(list.getSelectedIndex()>=0){
            String name = null;
            if(JOptionPane.showConfirmDialog(this, "This will be Deleted!!!. Are you Sure?!","Confirm",JOptionPane.OK_CANCEL_OPTION)==JOptionPane.OK_OPTION){
                name = list.getSelectedValue().toString();
                
                String s = null;
                s = JOptionPane.showInputDialog(this, "Please Type a Reason", "Drop",JOptionPane.OK_CANCEL_OPTION);
                
                if(s != null && !s.trim().equals("")){
                    try {
                        //INSERT INTO `inventory`.`disable` (`description`, `user_id`, `table_id`, `table_type`) VALUES ('desc', 'user_id', 'tabld_id', 'table_type');
                        String sql = "INSERT INTO `inventory`.`disable` (`description`, `user_id`, `table_id`, `table_type`) VALUES ('"+s+"', '"+inventory.core.MainFrame.user_id+"', '"+ids.get(list.getSelectedIndex())+"', '"+table_type+"');";
                        
                        
                        ResultSet rs = inventory.core.DBConnection.updateQueryGetID(sql);
                        
                        if(rs.next()){
                            String table = null;
                            
                            table = inventory.core.ProjectBOMStockMain.table_type.get(table_type).toLowerCase();
                            sql = "UPDATE `inventory`.`"+table+"` SET `disable_id`='"+rs.getLong(1)+"' WHERE `id`='"+ids.get(list.getSelectedIndex())+"';";
                            
                            inventory.core.DBConnection.updateQuery(sql);
                        }
                    } catch (SQLException ex) {
                        //Logger.getLogger(CategoryManage.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }else{
                    JOptionPane.showMessageDialog(this, "Please Type a Reason.","Alert",JOptionPane.OK_OPTION);
                    return;
                }
                
                //inventory.core.DBConnection.updateQuery("DELETE FROM `inventory`.`item` WHERE `id`='"+this.id.get(this.nameList.getSelectedIndex())+"';");
                if(obj instanceof CategoryManage){
                    ((CategoryManage)obj).LoadData();
                }
                JOptionPane.showMessageDialog(this, name + " was Deleted.","Alert",JOptionPane.OK_OPTION);
            }
        }
    }
    
    private void categoryNameListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_categoryNameListValueChanged
        // TODO add your handling code here:
        if(this.categoryNameList.getSelectedIndex()>=0 && this.categoryNameList.getSelectedIndex() < pane.size())
            this.descriptionTextPane.setText(this.pane.get(this.categoryNameList.getSelectedIndex()));
    }//GEN-LAST:event_categoryNameListValueChanged

    private void registerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerButtonActionPerformed
        // TODO add your handling code here:
        //inventory.core.ProjectBOMStockMain.setPage(inventory.core.ProjectBOMStockMain.PageList.indexOf("CategoryRegister"));
        inventory.categoryPage.CategoryRegister p = new inventory.categoryPage.CategoryRegister();
        if(inventory.core.ProjectBOMStockMain.display != null){
            inventory.core.ProjectBOMStockMain.display.dispose();
        }
        inventory.core.ProjectBOMStockMain.display = new inventory.core.ShowingFrame(p, "CategoryRegister");
        inventory.core.ProjectBOMStockMain.display.setVisible(true);
    }//GEN-LAST:event_registerButtonActionPerformed

    private ArrayList<String> list = null;
    private ArrayList<String> pane = null;
    private ArrayList<Integer> id = null;
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JList categoryNameList;
    private javax.swing.JScrollPane categoryNameScrollPane;
    private javax.swing.JScrollPane descriptionScrollPane;
    private javax.swing.JTextPane descriptionTextPane;
    private javax.swing.JButton dropButton;
    private javax.swing.JButton editButton;
    private javax.swing.JButton registerButton;
    // End of variables declaration//GEN-END:variables
}
