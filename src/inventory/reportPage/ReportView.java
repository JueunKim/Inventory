/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package inventory.reportPage;

import inventory.core.ProjectBOMStockMain;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.JTable;


    // Variables declaration - do not modify                     
/**
 *
 * @author Liz
 */
public class ReportView extends javax.swing.JPanel {
    private Date fromDate = null;
    private Date toDate = null;
    private ArrayList<Integer> idArrayList = null;
    /**
     * Creates new form ReportView
     */
    public ReportView() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        reportTable = new javax.swing.JTable();
        backButton = new javax.swing.JButton();
        dateLabel = new javax.swing.JLabel();
        fromTextField = new javax.swing.JTextField();
        toTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        todayButton1 = new javax.swing.JButton();
        applyButton1 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        totalLabel = new javax.swing.JLabel();
        totalTextField = new javax.swing.JTextField();

        reportTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Register_Key", "Name", "Code", "Price", "Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(reportTable);

        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        dateLabel.setText("Date");

        fromTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fromTextFieldMouseClicked(evt);
            }
        });
        fromTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fromTextFieldActionPerformed(evt);
            }
        });

        toTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                toTextFieldMouseClicked(evt);
            }
        });
        toTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toTextFieldActionPerformed(evt);
            }
        });

        jLabel2.setText("-");

        todayButton1.setText("Today");
        todayButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                todayButton1ActionPerformed(evt);
            }
        });

        applyButton1.setText("Apply");
        applyButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                applyButton1ActionPerformed(evt);
            }
        });

        totalLabel.setText("Total Price");

        totalTextField.setEnabled(false);
        totalTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalTextFieldActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(24, 24, 24)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 476, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(layout.createSequentialGroup()
                        .add(dateLabel)
                        .add(28, 28, 28)
                        .add(fromTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 137, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(34, 34, 34)
                        .add(jLabel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(18, 18, 18)
                        .add(toTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 143, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(backButton, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(layout.createSequentialGroup()
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(todayButton1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .add(applyButton1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .add(3, 3, 3))
                            .add(jSeparator1)
                            .add(jSeparator2)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, totalTextField))
                        .addContainerGap())
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 29, Short.MAX_VALUE)
                        .add(totalLabel)
                        .add(27, 27, 27))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(15, 15, 15)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(dateLabel)
                    .add(fromTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(toTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 16, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(applyButton1))
                .add(12, 12, 12)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                    .add(layout.createSequentialGroup()
                        .add(todayButton1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 53, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jSeparator2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(totalLabel)
                        .add(18, 18, 18)
                        .add(totalTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(3, 3, 3)
                        .add(jSeparator1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(backButton))
                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 308, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void loadData(Date fromDate, Date toDate) throws SQLException{

        this.reportTable = new JTable();    
        javax.swing.table.DefaultTableModel dtm = new javax.swing.table.DefaultTableModel();
      
        String sql = null;
        ResultSet rs =null ;
          
        try{
            if(fromDate != null && toDate != null){
                sql = "SELECT change.register_key as rkey,item.name as name,CONCAT(category.code, LPAD(variety.varietyNumber,2,'0'), LPAD(item.itemNumber,3,'0')) as wcode, item.price as price, change.date as date "
                        + "FROM inventory.change as `change` "
                        + "JOIN inventory.item as `item` JOIN inventory.category as `category` JOIN inventory.variety as variety "
                        + "ON `change`.item_id = `item`.id AND `category`.id = `item`.category_id AND `item`.variety_id = variety.id "
                        + "WHERE date >'"+this.fromDate+"'and date <'"+this.toDate+"' order by change.date;";
                }
                rs = inventory.core.DBConnection.executeQuery(sql);

                    if(rs != null){
                        while(rs.next()){
                            dtm.addRow(new Object[] { rs.getString("rkey"), rs.getString("name"), rs.getString("wcode"), rs.getFloat("price"),rs.getDate("date")});
                        }
                    }
        }catch(SQLException ex){
          Logger.getLogger(ReportView.class.getName()).log(Level.SEVERE, null, ex);
            }

            System.out.println(sql);
       
    }
   
    private void fromTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fromTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fromTextFieldActionPerformed

    private void toTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_toTextFieldActionPerformed

    private void toTextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_toTextFieldMouseClicked
        // TODO add your handling code here:
        Date utilDate = null;
        if(this.toDate != null){
            inventory.core.DateChooser dc = new inventory.core.DateChooser(new JDialog());
            utilDate = dc.select(this.toDate);
//            utilDate =  dc.select();
        }else{
            utilDate =  new inventory.core.DateChooser(new JDialog()).select();
        }
        if(utilDate != null){
            java.sql.Date date = new java.sql.Date(utilDate.getTime());
            if(date != null){
                this.toDate = date;
            }
        }
        
        if(this.toDate != null){
            this.toTextField.setText(this.toDate.toString());   
            System.out.println(this.toDate.toString());
    
        }
    }//GEN-LAST:event_toTextFieldMouseClicked

    private void fromTextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fromTextFieldMouseClicked
        // TODO add your handling code here:
              Date utilDate = null;
        if(this.fromDate != null){
            inventory.core.DateChooser dc = new inventory.core.DateChooser(new JDialog());
            utilDate = dc.select(this.fromDate);
//            utilDate =  dc.select();
        }else{
            utilDate =  new inventory.core.DateChooser(new JDialog()).select();
        }
        if(utilDate != null){
            java.sql.Date date = new java.sql.Date(utilDate.getTime());
            if(date != null){
                this.fromDate = date;
            }
        }
        
        if(this.fromDate != null){
            this.fromTextField.setText(this.fromDate.toString());  
            System.out.println(this.fromDate.toString());
        }
        
    }//GEN-LAST:event_fromTextFieldMouseClicked

    private void applyButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_applyButton1ActionPerformed
        // TODO add your handling code here:
        if( fromDate.getTime() - toDate.getTime() < 0){    
                try {
                    loadData(fromDate, toDate);
                } catch (SQLException ex) {
                    Logger.getLogger(ReportView.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        else {
           JOptionPane.showMessageDialog(this, "Apply Fail ","Warning",JOptionPane.OK_OPTION);
        } 

    }//GEN-LAST:event_applyButton1ActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        if(inventory.core.ProjectBOMStockMain.display != null){
            inventory.core.ProjectBOMStockMain.display.dispose();
        }
        inventory.core.ProjectBOMStockMain.setPage(inventory.core.ProjectBOMStockMain.PageList.indexOf("AdminMain"));
        clearElements();
                            
    }//GEN-LAST:event_backButtonActionPerformed

    private void totalTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_totalTextFieldActionPerformed

    private void todayButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_todayButton1ActionPerformed
        // TODO add your handling code here:
        Date todayDate = new Date();
        
        System.out.println(todayDate.toString());
        
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd"); 
        System.out.println(sdf.format(todayDate).toString()); 
        try {
            loadData(todayDate,todayDate);
  //        fromTextField.setText();
        } catch (SQLException ex) {
            Logger.getLogger(ReportView.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_todayButton1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton applyButton1;
    private javax.swing.JButton backButton;
    private javax.swing.JLabel dateLabel;
    private javax.swing.JTextField fromTextField;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable reportTable;
    private javax.swing.JTextField toTextField;
    private javax.swing.JButton todayButton1;
    private javax.swing.JLabel totalLabel;
    private javax.swing.JTextField totalTextField;
    // End of variables declaration//GEN-END:variables

    private void clearElements() {
        fromDate = null;
        toDate = null;
        
        fromTextField.setText("");
        toTextField.setText("");
        totalTextField.setText("");
    }
}
