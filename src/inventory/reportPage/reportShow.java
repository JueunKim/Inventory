/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package inventory.reportPage;

import inventory.core.ProjectBOMStockMain;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Liz
 */
public class reportShow extends javax.swing.JPanel {
    private Integer categoryId = null;
    private Integer code = null;
    private Integer currentInventory = null;
    private String name = null; 
    
    private ArrayList<Integer> categoryArrayList = null;
    private ArrayList<Integer> codeArrayList = null;
    private ArrayList<Integer> inventoryArrayList = null;
    private ArrayList<String> nameArrayList = null;
    
    /**
     * Creates new form reportShow
     */
    public reportShow() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        reportLabel = new javax.swing.JLabel();
        categoryLabel = new javax.swing.JLabel();
        categoryScrollPane = new javax.swing.JScrollPane();
        categoryList = new javax.swing.JList();
        nameListLabel = new javax.swing.JLabel();
        nameListScrollPane = new javax.swing.JScrollPane();
        nameList = new javax.swing.JList();
        codeLabel = new javax.swing.JLabel();
        codeScrollPane = new javax.swing.JScrollPane();
        codeList = new javax.swing.JList();
        inventoryLabel = new javax.swing.JLabel();
        inventoryScrollPane = new javax.swing.JScrollPane();
        inventoryList = new javax.swing.JList();
        backButton = new javax.swing.JButton();
        startDateTextField = new javax.swing.JTextField();
        exprieDateTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        reportLabel.setText("Report");

        categoryLabel.setText("Category");

        categoryList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        categoryScrollPane.setViewportView(categoryList);

        nameListLabel.setText("NameList");

        nameList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        nameListScrollPane.setViewportView(nameList);

        codeLabel.setText("Code");

        codeList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        codeScrollPane.setViewportView(codeList);

        inventoryLabel.setText("Inventory");

        inventoryList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        inventoryScrollPane.setViewportView(inventoryList);

        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        exprieDateTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exprieDateTextFieldActionPerformed(evt);
            }
        });

        jLabel1.setText("~");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(32, 32, 32)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(layout.createSequentialGroup()
                                .add(categoryLabel)
                                .add(44, 44, 44)
                                .add(nameListLabel)
                                .add(66, 66, 66)
                                .add(codeLabel)
                                .add(67, 67, 67)
                                .add(inventoryLabel))
                            .add(layout.createSequentialGroup()
                                .add(reportLabel)
                                .add(18, 18, 18)
                                .add(startDateTextField)
                                .add(28, 28, 28)
                                .add(jLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 33, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(exprieDateTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 112, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(152, 152, 152))))
                    .add(layout.createSequentialGroup()
                        .add(12, 12, 12)
                        .add(categoryScrollPane, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 94, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(12, 12, 12)
                        .add(nameListScrollPane, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 94, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(codeScrollPane, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(inventoryScrollPane, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 92, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(backButton)))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(backButton)
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(reportLabel)
                            .add(startDateTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 24, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(exprieDateTextField))
                        .add(20, 20, 20)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(categoryLabel)
                            .add(nameListLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 16, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(codeLabel)
                            .add(inventoryLabel))
                        .add(10, 10, 10)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(inventoryScrollPane)
                            .add(codeScrollPane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 203, Short.MAX_VALUE)
                            .add(categoryScrollPane)
                            .add(nameListScrollPane))))
                .add(17, 17, 17))
        );
    }// </editor-fold>//GEN-END:initComponents

    public void LoadData(Date startDate , Date expireDate){
        this.categoryArrayList = new ArrayList<>();
        this.codeArrayList = new ArrayList<>();
        this.inventoryArrayList = new ArrayList<>();
        this.nameArrayList = new ArrayList<>();
        
        String sql = null;
        ResultSet rs = null;
        
        if(startDate != null && expireDate != null){
            sql = "SELECT change.item_id,item.name,change.id,item.current FROM inventory.change AS `change`"
                    + "JOIN inventory.item AS `item`"
                    + "ON change.item_id = item.id "
                    + "WHERE date >'" + startDate + "'and date <'" + expireDate +"';";
            rs = inventory.core.DBConnection.executeQuery(sql);
        }    
        System.out.println(sql);
        try{
        if(rs != null){
            while(rs.next()){
                this.categoryArrayList.add(rs.getInt("item_id"));
                this.nameArrayList.add(rs.getString("name"));
                this.codeArrayList.add(rs.getInt("id"));
                this.inventoryArrayList.add(rs.getInt("current"));
            }
        }
        }catch(SQLException ex){  
         Logger.getLogger(reportMain.class.getName()).log(Level.SEVERE, null, ex); 
       }   
        this.categoryScrollPane.getVerticalScrollBar().setModel(this.nameListScrollPane.getVerticalScrollBar().getModel());
        this.codeScrollPane.getVerticalScrollBar().setModel(this.nameListScrollPane.getVerticalScrollBar().getModel());
        this.inventoryScrollPane.getVerticalScrollBar().setModel(this.nameListScrollPane.getVerticalScrollBar().getModel());
        
        this.categoryList.setListData(this.categoryArrayList.toArray());
        this.nameList.setListData(this.nameArrayList.toArray());
        this.codeList.setListData(this.codeArrayList.toArray());
        this.inventoryList.setListData(this.inventoryArrayList.toArray());
        
        this.startDateTextField.setText(startDate.toString());
        this.exprieDateTextField.setText(expireDate.toString());
        
        
    }
      public void setElements(Date startDate , Date expireDate){
        String sql = null;
        ResultSet rs = null;
       
//      ((reportMain)ProjectBOMStockMain.getPage(inventory.core.ProjectBOMStockMain.PageList.indexOf("reportMain"))).clearElements();  
        
        if(startDate != null && expireDate != null){
            sql = "SELECT change.item_id,item.name,change.id, current FROM inventory.change AS `change`"
                    + "JOIN inventory.item AS `item`"
                    + "ON change.item_id = item.id"
                    + " where date > '"+startDate+"' and date < '"+expireDate+"';";
            rs = inventory.core.DBConnection.executeQuery(sql);
            
        try{
            while(rs.next()){
                this.categoryId = rs.getInt("itme_id");
                this.name=rs.getString("name");
                this.code = rs.getInt("id");
                this.currentInventory = rs.getInt("current");
            }
         }catch(SQLException ex){
          Logger.getLogger(reportMain.class.getName()).log(Level.SEVERE, null, ex);
         }
        
    }
 }
       
        
  
    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
              if(inventory.core.ProjectBOMStockMain.display != null){
            inventory.core.ProjectBOMStockMain.display.dispose();
        }
        inventory.core.ProjectBOMStockMain.setPage(inventory.core.ProjectBOMStockMain.PageList.indexOf("reportMain"));
  
    }//GEN-LAST:event_backButtonActionPerformed

    private void exprieDateTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exprieDateTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_exprieDateTextFieldActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JLabel categoryLabel;
    private javax.swing.JList categoryList;
    private javax.swing.JScrollPane categoryScrollPane;
    private javax.swing.JLabel codeLabel;
    private javax.swing.JList codeList;
    private javax.swing.JScrollPane codeScrollPane;
    private javax.swing.JTextField exprieDateTextField;
    private javax.swing.JLabel inventoryLabel;
    private javax.swing.JList inventoryList;
    private javax.swing.JScrollPane inventoryScrollPane;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JList nameList;
    private javax.swing.JLabel nameListLabel;
    private javax.swing.JScrollPane nameListScrollPane;
    private javax.swing.JLabel reportLabel;
    private javax.swing.JTextField startDateTextField;
    // End of variables declaration//GEN-END:variables
}
