/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package inventory.packagePage;

import java.awt.Color;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Kind
 */
public class PackageManage extends inventory.myClasses.MyJPanel {

    /**
     * Creates new form PackageManage
     */
    public PackageManage() {
        super();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        packageNameScrollPane = new javax.swing.JScrollPane();
        packageNameList = new javax.swing.JList();
        packageSearchLabel = new javax.swing.JLabel();
        packageSearchTextField = new inventory.myClasses.MyTextField();
        registerButton = new inventory.myClasses.MyButton();
        dropButton = new inventory.myClasses.MyButton();
        backButton = new inventory.myClasses.MyButton();
        packageRegisterValueLabel = new javax.swing.JLabel();
        packageRegisterValueTextField = new inventory.myClasses.MyTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();

        packageNameList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                packageNameListValueChanged(evt);
            }
        });
        packageNameScrollPane.setViewportView(packageNameList);

        packageSearchLabel.setText("PackageSearch");

        packageSearchTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                packageSearchTextFieldKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                packageSearchTextFieldKeyTyped(evt);
            }
        });

        registerButton.setText("Register");
        registerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerButtonActionPerformed(evt);
            }
        });

        dropButton.setText("Drop");
        dropButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dropButtonActionPerformed(evt);
            }
        });

        backButton.setText("Back");
        backButton.setPreferredSize(new java.awt.Dimension(60, 30));
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        packageRegisterValueLabel.setText("RegisterValue");

        packageRegisterValueTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                packageRegisterValueTextFieldKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                packageRegisterValueTextFieldKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(packageNameScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(packageSearchLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(packageSearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(packageRegisterValueLabel)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(dropButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(registerButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(packageRegisterValueTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(backButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jSeparator3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(packageNameScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(packageSearchLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(packageSearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(packageRegisterValueLabel)
                        .addGap(1, 1, 1)
                        .addComponent(packageRegisterValueTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(registerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dropButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        inventory.core.ProjectBOMStockMain.setPage(inventory.core.ProjectBOMStockMain.PageList.indexOf("AdminMain"));
    }//GEN-LAST:event_backButtonActionPerformed

    private void dropButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dropButtonActionPerformed
        // TODO add your handling code here:
        /*
        int dialogResult = JOptionPane.showConfirmDialog (this, "Would You Like to Delete? Are you Sure?!","Warning",JOptionPane.YES_NO_OPTION);

        if(dialogResult == JOptionPane.YES_OPTION){
            inventory.core.DBConnection.updateQuery("DELETE FROM `inventory`.`package` WHERE `id`='"+id.get(this.packageNameList.getSelectedIndex())+"';");
            this.loadDataByName(this.packageSearchTextField.getText());
        }
        */
        
        inventory.core.ProjectBOMStockMain.dropAndDisable(this, this.id, this.packageNameList, inventory.core.ProjectBOMStockMain.table_type.indexOf("Package"));
    }//GEN-LAST:event_dropButtonActionPerformed

    private void registerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerButtonActionPerformed
        // TODO add your handling code here:
        if(!this.packageRegisterValueTextField.getText().trim().equals("")){
            if(isInteger(this.packageRegisterValueTextField.getText().trim())){
                try {
                    int dialogResult = JOptionPane.showConfirmDialog (this, "Would You Like to Register? Are you Sure?!","Warning",JOptionPane.YES_NO_OPTION);
                    
                    ResultSet rs = inventory.core.DBConnection.executeQuery("SELECT * FROM inventory.package where count = "+this.packageRegisterValueTextField.getText()+" and disable_id = 1;");
                    if(!rs.next() || rs.getInt("disable_id")!=1){
                        if(dialogResult == JOptionPane.YES_OPTION){
                            //inventory.core.DBConnection.updateQuery("DELETE FROM `inventory`.`package` WHERE `id`='"+id.get(this.packageNameList.getSelectedIndex())+"';");
                            inventory.core.DBConnection.updateQuery("INSERT INTO `inventory`.`package` (`count`) VALUES ('"+this.packageRegisterValueTextField.getText()+"');");
                            this.loadDataByName(this.packageSearchTextField.getText());
                        }
                    }else{
                        JOptionPane.showMessageDialog(this, "There is a duplicated NUMBER.","Warning",JOptionPane.OK_OPTION);
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(PackageManage.class.getName()).log(Level.SEVERE, null, ex);
                }
            }else{
                JOptionPane.showConfirmDialog (this, "This is not a Number format, Please retype correctly.","Warning",JOptionPane.YES_NO_OPTION);
            }
        }else{
            JOptionPane.showConfirmDialog (this, "This is no Number, Please retype correctly.","Warning",JOptionPane.YES_NO_OPTION);
        }
    }//GEN-LAST:event_registerButtonActionPerformed

    private static boolean isInteger(String s) {
        try { 
            Integer.parseInt(s); 
        } catch(NumberFormatException e) { 
            return false; 
        }
        // only got here if we didn't return false
    return true;
}
    
    private void packageSearchTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_packageSearchTextFieldKeyReleased
        // TODO add your handling code here:
        if(evt.getComponent() instanceof javax.swing.JTextField){
            loadDataByName(((javax.swing.JTextField)evt.getComponent()).getText());
        }
    }//GEN-LAST:event_packageSearchTextFieldKeyReleased

    private void packageSearchTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_packageSearchTextFieldKeyTyped
        // TODO add your handling code here:
        typingInt(evt);
    }//GEN-LAST:event_packageSearchTextFieldKeyTyped

    private void packageRegisterValueTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_packageRegisterValueTextFieldKeyTyped
        // TODO add your handling code here:
        typingInt(evt);
    }//GEN-LAST:event_packageRegisterValueTextFieldKeyTyped

    private void packageRegisterValueTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_packageRegisterValueTextFieldKeyReleased
        // TODO add your handling code here:
        if(evt.getComponent() instanceof javax.swing.JTextField){
            loadDataByName(((javax.swing.JTextField)evt.getComponent()).getText());
        }
    }//GEN-LAST:event_packageRegisterValueTextFieldKeyReleased

    private void packageNameListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_packageNameListValueChanged
        // TODO add your handling code here:
        this.updateUI();
    }//GEN-LAST:event_packageNameListValueChanged

    private void typingInt(java.awt.event.KeyEvent evt){
        char c = evt.getKeyChar();
  
        if (!Character.isDigit(c)) {
            evt.consume();
            return;
        }
    }
    
    private ArrayList<Integer> list = null;
    private ArrayList<Integer> id = null;
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JButton dropButton;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JList packageNameList;
    private javax.swing.JScrollPane packageNameScrollPane;
    private javax.swing.JLabel packageRegisterValueLabel;
    private javax.swing.JTextField packageRegisterValueTextField;
    private javax.swing.JLabel packageSearchLabel;
    private javax.swing.JTextField packageSearchTextField;
    private javax.swing.JButton registerButton;
    // End of variables declaration//GEN-END:variables

    public void loadDataByName(String name) {
        list = new ArrayList<Integer>();
        //pane = new ArrayList<Integer>();
        id = new ArrayList<Integer>();
        
        //this.modelTextPane.setText("");
        
        try {
            ResultSet rs = null;
            
            rs = inventory.core.DBConnection.executeQuery("SELECT * FROM inventory.package where count like '%"+name+"%' order by count;");
            
            if(rs != null){
                while(rs.next()){
                    if(rs.getInt("disable_id")!=1){
                        continue;
                    }
                    list.add(rs.getInt("count"));
                    id.add(rs.getInt("id"));
                }
            }
        } catch (SQLException ex) {
            //Logger.getLogger(CategoryManage.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        this.packageNameList.setListData(list.toArray());
    }

    @Override
    protected void myInitComponents() {
        this.initComponents();
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void LoadData() {
        this.loadDataByName("");
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void setComponetsColor(Color transparent) {
        this.backButton.setBackground(transparent);
        this.dropButton.setBackground(transparent);
        this.packageNameList.setBackground(transparent);
        this.packageRegisterValueTextField.setBackground(transparent);
        this.packageSearchTextField.setBackground(transparent);
        this.packageNameScrollPane.setBackground(transparent);
        this.registerButton.setBackground(transparent);
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
