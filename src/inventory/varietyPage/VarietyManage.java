/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package inventory.varietyPage;

import java.awt.Color;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author paul
 */
public class VarietyManage extends inventory.myClasses.MyJPanel {
    private ArrayList<Integer> category_id = null;
    private ArrayList<Integer> variety_id = null;
    private ArrayList<String> category_name = null;
    private ArrayList<String> variety_name = null;
    
    
    /**
     * Creates new form VarietyManage
     */
    public VarietyManage() {
        super();
        LoadData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        categoryScrollPane = new javax.swing.JScrollPane();
        categoryList = new inventory.myClasses.MyList();
        categoryLabel = new javax.swing.JLabel();
        varietyLabel = new javax.swing.JLabel();
        varietyScrollPane = new javax.swing.JScrollPane();
        varietyList = new inventory.myClasses.MyList();
        registerButton = new inventory.myClasses.MyButton();
        editButton = new inventory.myClasses.MyButton();
        dropButton = new inventory.myClasses.MyButton();
        backButton = new inventory.myClasses.MyButton();

        categoryList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                categoryListValueChanged(evt);
            }
        });
        categoryScrollPane.setViewportView(categoryList);

        categoryLabel.setText("Category");

        varietyLabel.setText("Variety");

        varietyList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                varietyListMouseClicked(evt);
            }
        });
        varietyScrollPane.setViewportView(varietyList);

        registerButton.setText("Register");
        registerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerButtonActionPerformed(evt);
            }
        });

        editButton.setText("Edit");
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });

        dropButton.setText("Drop");
        dropButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dropButtonActionPerformed(evt);
            }
        });

        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(categoryScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                    .addComponent(categoryLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(varietyLabel)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(varietyScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(registerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(editButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dropButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(12, 12, 12))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(categoryLabel)
                    .addComponent(varietyLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(categoryScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 471, Short.MAX_VALUE)
                    .addComponent(varietyScrollPane)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(registerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(94, 94, 94)
                        .addComponent(editButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(dropButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(145, 145, 145)
                        .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void categoryListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_categoryListValueChanged
        // TODO add your handling code here:
        if(evt.getSource() instanceof javax.swing.JList){
            try {
                if(((javax.swing.JList)evt.getSource()).getSelectedIndex() < 0){
                    return;
                }
                Integer id = this.category_id.get(((javax.swing.JList)evt.getSource()).getSelectedIndex());
                
                this.variety_id = new ArrayList<Integer>();
                this.variety_name = new ArrayList<String>();
                
                String sql = null;
                //SELECT *, LPAD(variety.varietyNumber,2,'0') as vn FROM inventory.variety;
                sql = "SELECT *, LPAD(variety.varietyNumber,2,'0') as vn FROM inventory.variety where category_id = "+id+";";
                
                ResultSet rs = inventory.core.DBConnection.executeQuery(sql);
                
                while(rs.next()){
                    if(rs.getInt("disable_id") != 1){
                        continue;
                    }
                    
                    this.variety_id.add(rs.getInt("id"));
                    String str = rs.getString("vn") + " : " + rs.getString("name");
                    this.variety_name.add(str);
                }
                
                this.varietyList.setListData(this.variety_name.toArray());
    //            this.category_id.get(((javax.swing.JList)evt.getSource()).getSelectedIndex());
            } catch (SQLException ex) {
                Logger.getLogger(VarietyManage.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
    }//GEN-LAST:event_categoryListValueChanged

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        if(inventory.core.MainFrame.role == 1){
            inventory.core.ProjectBOMStockMain.setPage(inventory.core.ProjectBOMStockMain.PageList.indexOf("AdminMain"));
        }else{
            inventory.core.ProjectBOMStockMain.setPage(inventory.core.ProjectBOMStockMain.PageList.indexOf("Login"));
        }
        if(inventory.core.ProjectBOMStockMain.display != null){
            inventory.core.ProjectBOMStockMain.display.dispose();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_backButtonActionPerformed

    private void registerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerButtonActionPerformed
        //INSERT INTO `inventory`.`variety` (`category_id`, `name`, `register_id`) VALUES (2, 'test7', 1);
        inventory.varietyPage.VarietyUpdate p = new inventory.varietyPage.VarietyUpdate();
        if(this.categoryList.getSelectedIndex()>=0){
            p.setElements(0, (String)this.categoryList.getSelectedValue(), this.category_id.get(this.categoryList.getSelectedIndex()));
        }else{
            p.setElements(0,"",null);
        }

        if(inventory.core.ProjectBOMStockMain.display != null)
            inventory.core.ProjectBOMStockMain.display.dispose();
        inventory.core.ProjectBOMStockMain.display = new inventory.core.ShowingFrame(p, "VarietyRegister");
        inventory.core.ProjectBOMStockMain.display.setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_registerButtonActionPerformed

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
        // TODO add your handling code here:
        editProcess();
    }//GEN-LAST:event_editButtonActionPerformed

    private void dropButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dropButtonActionPerformed
        // TODO add your handling code here:
        inventory.core.ProjectBOMStockMain.dropAndDisable(this, this.variety_id, this.varietyList, inventory.core.ProjectBOMStockMain.table_type.indexOf("Variety"));
        Integer cid = this.category_id.get(this.categoryList.getSelectedIndex());
        this.LoadData();
        this.categoryList.setSelectedIndex(this.category_id.indexOf(cid));
    }//GEN-LAST:event_dropButtonActionPerformed

    private void varietyListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_varietyListMouseClicked
        // TODO add your handling code here:
        if(evt.getClickCount() == 2){
            editProcess();
        }
    }//GEN-LAST:event_varietyListMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JLabel categoryLabel;
    private javax.swing.JList categoryList;
    private javax.swing.JScrollPane categoryScrollPane;
    private javax.swing.JButton dropButton;
    private javax.swing.JButton editButton;
    private javax.swing.JButton registerButton;
    private javax.swing.JLabel varietyLabel;
    private javax.swing.JList varietyList;
    private javax.swing.JScrollPane varietyScrollPane;
    // End of variables declaration//GEN-END:variables

    private void editProcess(){
        inventory.varietyPage.VarietyUpdate p = new inventory.varietyPage.VarietyUpdate();
        if(this.varietyList.getSelectedIndex() >= 0){
            p.setElements(this.variety_id.get(this.varietyList.getSelectedIndex()), (String)this.categoryList.getSelectedValue(), this.category_id.get(this.categoryList.getSelectedIndex()));
        }else{
            JOptionPane.showMessageDialog(null, "Please Select Variety","Warning",JOptionPane.OK_OPTION);
            return;
        }

        if(inventory.core.ProjectBOMStockMain.display != null)
            inventory.core.ProjectBOMStockMain.display.dispose();
        inventory.core.ProjectBOMStockMain.display = new inventory.core.ShowingFrame(p, "VarietyEdit");
        inventory.core.ProjectBOMStockMain.display.setVisible(true);
    }
    
    public void setSelectedVariety(Integer category_id, Integer variety_id){
        this.LoadData();
        this.categoryList.setSelectedIndex(this.category_id.indexOf(category_id));
        this.varietyList.setSelectedIndex(this.variety_id.indexOf(variety_id));
    }
    
    @Override
    protected void myInitComponents() {
//        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        this.initComponents();
    }

    @Override
    public void LoadData() {
        try {
            this.category_id = new ArrayList<Integer>();
            this.category_name = new ArrayList<String>();
            
            String sql = "SELECT * FROM inventory.category;";
            
            ResultSet rs = inventory.core.DBConnection.executeQuery(sql);
            
            while(rs.next()){
                if(rs.getInt("disable_id") != 1){
                    continue;
                }
                this.category_id.add(rs.getInt("id"));
                this.category_name.add(rs.getString("name"));
            }
            this.categoryList.setListData(this.category_name.toArray());
            this.categoryList.clearSelection();
    //        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        } catch (SQLException ex) {
            Logger.getLogger(VarietyManage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    @Override
    public void setComponetsColor(Color transparent) {
        this.categoryList.setBackground(transparent);
        this.categoryScrollPane.setBackground(transparent);
        this.varietyList.setBackground(transparent);
        this.varietyScrollPane.setBackground(transparent);
        this.registerButton.setBackground(transparent);
        this.editButton.setBackground(transparent);
        this.dropButton.setBackground(transparent);
        this.backButton.setBackground(transparent);
//        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
