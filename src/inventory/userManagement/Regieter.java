/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package inventory.userManagement;

import inventory.core.ProjectBOMStockMain;
import java.awt.Color;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Kind
 */
public class Regieter extends inventory.myClasses.MyJPanel {

    /**
     * Creates new form Regieter
     */
    public Regieter() {
        super();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        idLabel = new javax.swing.JLabel();
        passwordLabel = new javax.swing.JLabel();
        passwordRetypeLabel = new javax.swing.JLabel();
        passwordRetypeTextField = new inventory.myClasses.MyPasswordTextField();
        passwordTextField = new inventory.myClasses.MyPasswordTextField();
        idTextField = new inventory.myClasses.MyTextField();
        isSame = new javax.swing.JLabel();
        register = new inventory.myClasses.MyButton();
        cancel = new inventory.myClasses.MyButton();
        nameLabel = new javax.swing.JLabel();
        nameTextField = new inventory.myClasses.MyTextField();
        contactLabel = new javax.swing.JLabel();
        contactField = new inventory.myClasses.MyTextField();

        idLabel.setText("ID");

        passwordLabel.setText("Password");

        passwordRetypeLabel.setText("Password Retype");

        passwordRetypeTextField.setBackground(new java.awt.Color(255,255,255,152));
        passwordRetypeTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                passwordRetypeTextFieldKeyReleased(evt);
            }
        });

        passwordTextField.setBackground(new java.awt.Color(255,255,255,152));
        passwordTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                passwordTextFieldKeyReleased(evt);
            }
        });

        idTextField.setBackground(new java.awt.Color(255,255,255,152));

        isSame.setText("Retype Password");

        register.setText("Sign In");
        register.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerActionPerformed(evt);
            }
        });

        cancel.setText("Cancel");
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });

        nameLabel.setText("Name");

        nameTextField.setBackground(new java.awt.Color(255,255,255,152));

        contactLabel.setText("Contact");

        contactField.setBackground(new java.awt.Color(255,255,255,152));
        contactField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                contactFieldKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cancel)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(passwordLabel)
                            .addComponent(idLabel)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(passwordRetypeLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(nameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(contactLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(passwordTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 181, Short.MAX_VALUE)
                            .addComponent(passwordRetypeTextField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(idTextField)
                            .addComponent(nameTextField)
                            .addComponent(contactField))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(register)
                        .addGap(117, 146, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(isSame, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameLabel)
                    .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(contactLabel)
                    .addComponent(contactField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idLabel)
                    .addComponent(idTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordLabel)
                    .addComponent(passwordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordRetypeLabel)
                    .addComponent(passwordRetypeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(isSame))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancel)
                    .addComponent(register))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    public void clearList(){
        this.isSame.setText("Retype Password");
        this.idTextField.setText("");
        this.passwordTextField.setText("");
        this.passwordRetypeTextField.setText("");
        this.nameTextField.setText("");
        this.contactField.setText("");
    }
    
    private void passwordRetypeTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passwordRetypeTextFieldKeyReleased
        if(passwordRetypeTextField.getText().equals("")){
            this.isSame.setText("Retype Password");
            return;
        }
        if(passwordRetypeTextField.getText().equals(passwordTextField.getText())){
            this.isSame.setText("Password is Same");
        }else{
            this.isSame.setText("Password is Not Same");
        }
        // TODO add your handling code here:    
    }//GEN-LAST:event_passwordRetypeTextFieldKeyReleased

    private void passwordTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passwordTextFieldKeyReleased
        // TODO add your handling code here:
        if(!passwordRetypeTextField.getText().equals("")){
            if(passwordRetypeTextField.getText().equals(passwordTextField.getText())){
                this.isSame.setText("Password is Same");
            }else{
                this.isSame.setText("Password is Not Same");
            }
        }
    }//GEN-LAST:event_passwordTextFieldKeyReleased

    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
        // TODO add your handling code here:
        ProjectBOMStockMain.setPage(inventory.core.ProjectBOMStockMain.PageList.indexOf(inventory.core.MainFrame.myPanelPast));
        clearList();
    }//GEN-LAST:event_cancelActionPerformed

    private void registerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerActionPerformed
        // TODO add your handling code here:
        try {
            int dialogResult = JOptionPane.showConfirmDialog (this, "Would You Like to Save?","Warning",JOptionPane.YES_NO_OPTION);
            if(dialogResult == JOptionPane.YES_OPTION){
                if(this.nameTextField.getText().trim().equals("")){
                    JOptionPane.showMessageDialog(this, "Neme is empty.","Warning",JOptionPane.OK_OPTION);
                    return;
                }

                String contact = null;
                if(this.contactField.getText().trim().equals("")){
                    if(JOptionPane.showConfirmDialog(this, "Contact is empty. Do you want to ignore this item?!","Warning",JOptionPane.OK_CANCEL_OPTION) == JOptionPane.CANCEL_OPTION){
                        return;
                    }else{
                        contact = "0";
                    }
                }else{
                    contact = this.contactField.getText();
                }
                
                if(this.idTextField.getText().trim().equals("")){
                    JOptionPane.showMessageDialog(this, "ID is empty.","Warning",JOptionPane.OK_OPTION);
                    return;
                }
                
                if(this.isSame.getText().equals("Password is Same")){
                    if(!inventory.core.DBConnection.executeQuery("SELECT user FROM inventory.user WHERE user='"+this.idTextField.getText()+"';").next()){
                        inventory.core.DBConnection.updateQuery("INSERT INTO `inventory`.`user` (`password`, `user`, `name`, `contact`) VALUES (password('"
                                +this.passwordTextField.getText()+"'), '"+this.idTextField.getText()+"','"+this.nameTextField.getText()+"','"+contact+"');");
                        clearList();

                        if(JOptionPane.showConfirmDialog(this, "save done! Now, page will go to \"Login\".","Confirm",JOptionPane.OK_CANCEL_OPTION) == 0){
                            ProjectBOMStockMain.setPage(inventory.core.ProjectBOMStockMain.PageList.indexOf("Login"));
                        }
                    }else{
                        JOptionPane.showMessageDialog(this, "There is Same user. Please Change your ID.","Warning",JOptionPane.OK_OPTION);
                    }
                }
            }else{
                JOptionPane.showMessageDialog(this, "You select \"No\"!");
            }
        } catch (SQLException ex) {
            /*
             todo
             * Handle Excute SQL Exception
             */
        }
    }//GEN-LAST:event_registerActionPerformed

    private void contactFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_contactFieldKeyTyped
        // TODO add your handling code here:
        if(!Character.isDigit(evt.getKeyChar())){
            evt.consume();
        }
    }//GEN-LAST:event_contactFieldKeyTyped

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancel;
    private javax.swing.JTextField contactField;
    private javax.swing.JLabel contactLabel;
    private javax.swing.JLabel idLabel;
    private javax.swing.JTextField idTextField;
    private javax.swing.JLabel isSame;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JLabel passwordRetypeLabel;
    private javax.swing.JPasswordField passwordRetypeTextField;
    private javax.swing.JPasswordField passwordTextField;
    private javax.swing.JButton register;
    // End of variables declaration//GEN-END:variables

    @Override
    public void setComponetsColor(Color transparent) {
        this.contactField.setBackground(transparent);
        this.idTextField.setBackground(transparent);
        this.nameTextField.setBackground(transparent);
        this.passwordRetypeTextField.setBackground(transparent);
        this.passwordTextField.setBackground(transparent);
        this.register.setBackground(transparent);
        this.cancel.setBackground(transparent);
    }

    @Override
    public void LoadData() {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    protected void myInitComponents() {
        this.initComponents();
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
